// This defines the overall structure of a query
query = { SOI ~ expression ~ EOI }

// An expression is one or more terms joined by operators
expression = { logical_or }

// Define operator precedence: OR is lowest
logical_or = { logical_and ~ (OR ~ logical_and)* }
logical_and = { term ~ (AND ~ term)* }

// A term can be a negated factor, a grouped expression, or a simple predicate
term = { NOT? ~ factor }
factor = { predicate | "(" ~ expression ~ ")" }

// A predicate is our key:value pair
predicate = { identifier ~ ":" ~ value }

// Define the components
identifier = @{ ASCII_ALPHANUMERIC+ }

// --- CORRECTED VALUE RULES ---
value = { quoted_value | unquoted_value }

// An unquoted value is a sequence of characters that are not special operators or whitespace.
// It can include comparison operators and time/size units.
unquoted_value = @{ (!(" " | "\t" | "\n" | "\r" | "(" | ")") ~ ANY)+ }

// A quoted value captures everything between the quotes
quoted_value = { single_quoted | double_quoted }
single_quoted = @{ "'" ~ (("\\'" | !"'") ~ ANY)* ~ "'" }
double_quoted = @{ "\"" ~ (("\\\"" | !"\"") ~ ANY)* ~ "\"" }

// Define operators
AND = { "&" | "and" }
OR = { "|" | "or" }
NOT = { "!" | "not" }

// Define whitespace, which we want to ignore between tokens
WHITESPACE = _{ " " | "\t" | "\n" | "\r" }